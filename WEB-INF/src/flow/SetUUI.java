package flow;

import java.util.HashMap;
import java.util.Map;

import org.apache.log4j.Logger;
import org.springframework.dao.EmptyResultDataAccessException;

import beans.CustomerVO;

import com.avaya.sce.runtimecommon.IVariableField;
import com.cqgas.tools.util.AppUtil;
import com.cqgas.tools.util.TextUtil;

/**
 * A basic servlet which allows a user to define their code, generate
 * any output, and to select where to transition to next.
 * Last generated by Orchestration Designer at: 2016年8月29日 下午09时54分01秒
 */
public class SetUUI extends com.avaya.sce.runtime.BasicServlet {
	private static final Logger logs = Logger.getLogger(SetUUI.class);
	//{{START:CLASS:FIELDS
	//}}END:CLASS:FIELDS

	/**
	 * Default constructor
	 * Last generated by Orchestration Designer at: 2016年8月29日 下午09时54分01秒
	 */
	public SetUUI() {
		//{{START:CLASS:CONSTRUCTOR
		super();
		//}}END:CLASS:CONSTRUCTOR
	}

	/**
	 * This method allows for custom integration with other Java components.
	 * You may use Java for sophisticated logic or to integrate with custom
	 * connectors (i.e. JMS, custom web services, sockets, XML, JAXB, etc.)
	 *
	 * Any custom code added here should work as efficiently as possible to prevent delays.
	 * It's important to design your callflow so that the voice browser (Voice Portal/IR)
	 * is not waiting too long for a response as this can lead to a poor caller experience.
	 * Additionally, if the response to the client voice browser exceeds the configured
	 * timeout, the platform may throw an "error.badfetch". 
	 *
	 * Using this method, you have access to all session variables through the 
	 * SCESession object.
	 *
	 * The code generator will *** NOT *** overwrite this method in the future.
	 * Last generated by Orchestration Designer at: 2016年8月29日 下午09时54分01秒
	 */
	public void servletImplementation(com.avaya.sce.runtimecommon.SCESession mySession) {

		IVariableField menuCode = mySession.getVariableField(IProjectVariables.IVRTOCSR, IProjectVariables.IVRTOCSR_FIELD_MENUCODE);
		
		IVariableField uui = mySession.getVariableField(IProjectVariables.IVRTOCSR, IProjectVariables.IVRTOCSR_FIELD_UUI);
		
		IVariableField mainMenuField = mySession.getVariableField(IProjectVariables.MAIN_MENU, IProjectVariables.MAIN_MENU_FIELD_UTTERANCE);
		
		IVariableField callidField = mySession.getVariableField(IProjectVariables.CQVALUE, IProjectVariables.CQVALUE_FIELD_CALLID);
		IVariableField callTypeField = mySession.getVariableField(IProjectVariables.CQVALUE, IProjectVariables.CQVALUE_FIELD_CALLTYPE);
		IVariableField csrNumField = mySession.getVariableField(IProjectVariables.IVRTOCSR, IProjectVariables.IVRTOCSR_FIELD_CSRNUM);
		Map map  = new HashMap();
		//map.put("menuCode", menuCode.getStringValue()+TextUtil.getSkillNONAME(menuCode.getStringValue()));
		map.put("menuCode",mainMenuField.getStringValue());
		map.put("callId2",callidField.getStringValue());
		map.put("callType",callTypeField.getStringValue());
		map.put("callFlag", "1");
		uui.setValue(TextUtil.fromatUUIFromMap(map));
		 logs.debug("转人工uui数据为："+uui.getStringValue());
		 if("9".equals(mainMenuField.getStringValue())){
			 csrNumField.setValue("6003");
		 }else{
			 csrNumField.setValue("6001");
		 }
		 
		 //menuCode=1查询气费  menuCode=2 事故报警  menuCode=3 服务申请  menuCode=4 投诉建议 menuCode=5 公告信息 menuCode=7 安全用气常识  menuCode=0主菜单转的人工
		 //软电话获取随路数据   softphone.CallInfo.AttachData("menuCode")
		//function mutetransfer(){
		//	var ret;
			
		// threeFlag = 1;
		//	ret=softphone.InitTransfer("6000",document.getElementById("calldata").value,true);
		//	logret("mutetransfer",ret);
		//}
	}
	/**
	 * Builds the list of branches that are defined for this servlet object.
	 * This list is built automatically by defining Goto nodes in the call flow editor.
	 * It is the programmer's responsibilty to provide at least one enabled Goto.<BR>
	 *
	 * The user should override updateBranches() to determine which Goto that the
	 * framework will activate.  If there is not at least one enabled Goto item, 
	 * the framework will throw a runtime exception.<BR>
	 *
	 * This method is generated automatically and changes to it may
	 * be overwritten next time code is generated.  To modify the list
	 * of branches for the flow item, override:
	 *     <code>updateBranches(Collection branches, SCESession mySession)</code>
	 *
	 * @return a Collection of <code>com.avaya.sce.runtime.Goto</code>
	 * objects that will be evaluated at runtime.  If there are no gotos
	 * defined in the Servlet node, then this returns null.
	 * Last generated by Orchestration Designer at: (timestamp generation disabled)
	 */
	public java.util.Collection getBranches(com.avaya.sce.runtimecommon.SCESession mySession) {
		java.util.List list = null;
		com.avaya.sce.runtime.Goto aGoto = null;
		list = new java.util.ArrayList(1);

		aGoto = new com.avaya.sce.runtime.Goto("TransferRG", 0, true, "Default");
		list.add(aGoto);

		return list;
	}
}
