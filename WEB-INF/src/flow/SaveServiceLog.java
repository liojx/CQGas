package flow;

import org.springframework.dao.EmptyResultDataAccessException;

import beans.CustomerVO;
import beans.ServiceLogVO;

import com.avaya.sce.runtimecommon.IVariableField;
import com.cqgas.tools.util.AppUtil;

/**
 * A basic servlet which allows a user to define their code, generate
 * any output, and to select where to transition to next.
 * Last generated by Orchestration Designer at: 2016年8月29日 下午09时54分01秒
 */
public class SaveServiceLog extends com.avaya.sce.runtime.BasicServlet {

	//{{START:CLASS:FIELDS
	//}}END:CLASS:FIELDS

	/**
	 * Default constructor
	 * Last generated by Orchestration Designer at: 2016年8月29日 下午09时54分01秒
	 */
	public SaveServiceLog() {
		//{{START:CLASS:CONSTRUCTOR
		super();
		//}}END:CLASS:CONSTRUCTOR
	}

	/**
	 * This method allows for custom integration with other Java components.
	 * You may use Java for sophisticated logic or to integrate with custom
	 * connectors (i.e. JMS, custom web services, sockets, XML, JAXB, etc.)
	 *
	 * Any custom code added here should work as efficiently as possible to prevent delays.
	 * It's important to design your callflow so that the voice browser (Voice Portal/IR)
	 * is not waiting too long for a response as this can lead to a poor caller experience.
	 * Additionally, if the response to the client voice browser exceeds the configured
	 * timeout, the platform may throw an "error.badfetch". 
	 *
	 * Using this method, you have access to all session variables through the 
	 * SCESession object.
	 *
	 * The code generator will *** NOT *** overwrite this method in the future.
	 * Last generated by Orchestration Designer at: 2016年8月29日 下午09时54分01秒
	 */
	public void servletImplementation(com.avaya.sce.runtimecommon.SCESession mySession) {

		// TODO: Add your code here!
		IVariableField menuField = mySession.getVariableField(IProjectVariables.MAIN_MENU,IProjectVariables.MAIN_MENU_FIELD_UTTERANCE);
		
		IVariableField callIdField = mySession.getVariableField(IProjectVariables.CQVALUE,IProjectVariables.CQVALUE_FIELD_CALLID);
		String menuKey = menuField.getStringValue();
		ServiceLogVO vo = new ServiceLogVO();
		String btnCode = null;
		if("1".equals(menuKey)){
			btnCode = "0320";
		}else if("2".equals(menuKey)){
			btnCode = "0321";
		}else if("3".equals(menuKey)){
			IVariableField serviceMenuField = mySession.getVariableField(IProjectVariables.SERVICE_APPLY_MENU,IProjectVariables.SERVICE_APPLY_MENU_FIELD_UTTERANCE);
			if("1".equals(serviceMenuField.getStringValue())){
				btnCode = "0322";
			}else if("2".equals(serviceMenuField.getStringValue())){
				btnCode = "0329";
			}
		}else if("4".equals(menuKey)){
			btnCode = "0323";
		}else if("5".equals(menuKey)){
			IVariableField noticMenuField = mySession.getVariableField(IProjectVariables.NOTICE_MENU,IProjectVariables.NOTICE_MENU_FIELD_UTTERANCE);
			if("1".equals(noticMenuField.getStringValue())){
				btnCode = "0324";
			}else if("2".equals(noticMenuField.getStringValue())){
				btnCode = "0330";
			}
		}else if("6".equals(menuKey)){
			btnCode = "0325";
		}else if("7".equals(menuKey)){
			btnCode = "0326";
		}
		vo.setCallId(callIdField.getStringValue());

		vo.setCsrId("IVR");
		vo.setOrgId("0000");
		try {
			AppUtil.saveServiceLog(vo, btnCode);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	/**
	 * Builds the list of branches that are defined for this servlet object.
	 * This list is built automatically by defining Goto nodes in the call flow editor.
	 * It is the programmer's responsibilty to provide at least one enabled Goto.<BR>
	 *
	 * The user should override updateBranches() to determine which Goto that the
	 * framework will activate.  If there is not at least one enabled Goto item, 
	 * the framework will throw a runtime exception.<BR>
	 *
	 * This method is generated automatically and changes to it may
	 * be overwritten next time code is generated.  To modify the list
	 * of branches for the flow item, override:
	 *     <code>updateBranches(Collection branches, SCESession mySession)</code>
	 *
	 * @return a Collection of <code>com.avaya.sce.runtime.Goto</code>
	 * objects that will be evaluated at runtime.  If there are no gotos
	 * defined in the Servlet node, then this returns null.
	 * Last generated by Orchestration Designer at: (timestamp generation disabled)
	 */
	public java.util.Collection getBranches(com.avaya.sce.runtimecommon.SCESession mySession) {
		java.util.List list = null;
		com.avaya.sce.runtime.Goto aGoto = null;
		list = new java.util.ArrayList(1);

		aGoto = new com.avaya.sce.runtime.Goto("GotoBusiness", 0, true, "Default");
		list.add(aGoto);

		return list;
	}
}
